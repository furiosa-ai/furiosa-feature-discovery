name: Build & Test Rust Project

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  GITHUB_TOKEN: ${{ secrets.TOKEN_FOR_CLONE_ANOTHER_REPO }}

jobs:
  build:
    strategy:
      matrix:
        os: ['ubuntu-20.04', 'ubuntu-22.04', 'ubuntu-24.04']
    runs-on: ${{ matrix.os }}
    steps:
      - name: checkout furiosa-smi
        id: furiosa-smi-checkout
        uses: actions/checkout@v4
        with:
          repository: furiosa-ai/furiosa-smi
          token: ${{ secrets.TOKEN_FOR_CLONE_ANOTHER_REPO }}
          path: furiosa-smi
      - name: create `furiosa-smi` dependencies related directories
        run: |
          sudo mkdir -p /usr/local/lib
          sudo mkdir -p /usr/local/include/furiosa
          sudo chown -R $(id -u -n):$(id -g -n) /usr/local/lib
          sudo chown -R $(id -u -n):$(id -g -n) /usr/local/include/furiosa
      - name: cache & restore `furiosa-smi` library
        id: restore-furiosa-smi
        uses: actions/cache@v4
        with:
          key: '${{ steps.furiosa-smi-checkout.outputs.commit }}'
          path: |
            /usr/local/lib/libfuriosa_smi.so
            /usr/local/include/furiosa/furiosa_smi.h
      - name: build & install furiosa-smi
        if: steps.restore-furiosa-smi.outputs.cache-hit != 'true'
        run: |
          cd furiosa-smi
          rustup component add clippy rustfmt
          cargo build
          make install
      - uses: actions/checkout@v4
      - name: set github credentials
        run: |
          git config --global url."https://$GITHUB_TOKEN:@github.com/".insteadOf "https://github.com/"
      - name: Install rust components
        run: rustup component add clippy rustfmt
      - name: install cargo tools
        run: cargo install --force cargo-sort # cargo-machete
      # - name: machete # machete is not compatible with toolchain of this repo.
      #   run: cargo machete
      - name: sort
        run: cargo sort --grouped --check --workspace
      - name: clippy
        run: cargo fmt --all --check && cargo -q clippy --all-targets -- -D rust_2018_idioms -D warnings
      - name: Run build
        run: cargo build
      - name: Run tests
        run: make test
